import os, time, requests, yaml, logging
logging.basicConfig(level=logging.INFO,
                    format="%(asctime)s %(levelname)s %(message)s")

with open("/opt/bridge/marketplace_tokens.yaml") as f:
    cfg = yaml.safe_load(f)
oz = next(b for b in cfg if b.get("ozon_client_id"))
CID, KEY = str(oz["ozon_client_id"]), oz["ozon_api_key"]
HEAD = {"Client-Id": CID, "Api-Key": KEY, "Content-Type": "application/json"}

def fetch():
    body = {"dir":"asc","filter":{"status":"awaiting_packaging"},"limit":5,"offset":0}
    r = requests.post("https://api-seller.ozon.ru/v3/posting/fbs/list",
                      headers=HEAD, json=body, timeout=30)
    r.raise_for_status()
    return r.json()["result"]["postings"]

while True:
    try:
        logging.info("Fetched %s orders", len(fetch()))
    except Exception as e:
        logging.error("ERR %s", e, exc_info=True)
    time.sleep(900)
